/*
 * Snowstorm
 * SNOMED CT Terminology Server REST API
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.ItemsPageReferenceSetMember;
import io.swagger.client.model.RefSetMemberPageWithBucketAggregationsReferenceSetMember;
import io.swagger.client.model.ReferenceSetMember;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RefsetMembersApi {
    private ApiClient apiClient;

    public RefsetMembersApi() {
        this(Configuration.getDefaultApiClient());
    }

    public RefsetMembersApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for fetchMemberUsingGET
     * @param branch branch (required)
     * @param uuid uuid (required)
     * @param acceptLanguage Accept-Language (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call fetchMemberUsingGETCall(String branch, String uuid, String acceptLanguage, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/{branch}/members/{uuid}"
            .replaceAll("\\{" + "branch" + "\\}", apiClient.escapeString(branch.toString()))
            .replaceAll("\\{" + "uuid" + "\\}", apiClient.escapeString(uuid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (acceptLanguage != null)
        localVarHeaderParams.put("Accept-Language", apiClient.parameterToString(acceptLanguage));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call fetchMemberUsingGETValidateBeforeCall(String branch, String uuid, String acceptLanguage, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'branch' is set
        if (branch == null) {
            throw new ApiException("Missing the required parameter 'branch' when calling fetchMemberUsingGET(Async)");
        }
        
        // verify the required parameter 'uuid' is set
        if (uuid == null) {
            throw new ApiException("Missing the required parameter 'uuid' when calling fetchMemberUsingGET(Async)");
        }
        
        // verify the required parameter 'acceptLanguage' is set
        if (acceptLanguage == null) {
            throw new ApiException("Missing the required parameter 'acceptLanguage' when calling fetchMemberUsingGET(Async)");
        }
        

        com.squareup.okhttp.Call call = fetchMemberUsingGETCall(branch, uuid, acceptLanguage, progressListener, progressRequestListener);
        return call;

    }

    /**
     * fetchMember
     * 
     * @param branch branch (required)
     * @param uuid uuid (required)
     * @param acceptLanguage Accept-Language (required)
     * @return ReferenceSetMember
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ReferenceSetMember fetchMemberUsingGET(String branch, String uuid, String acceptLanguage) throws ApiException {
        ApiResponse<ReferenceSetMember> resp = fetchMemberUsingGETWithHttpInfo(branch, uuid, acceptLanguage);
        return resp.getData();
    }

    /**
     * fetchMember
     * 
     * @param branch branch (required)
     * @param uuid uuid (required)
     * @param acceptLanguage Accept-Language (required)
     * @return ApiResponse&lt;ReferenceSetMember&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ReferenceSetMember> fetchMemberUsingGETWithHttpInfo(String branch, String uuid, String acceptLanguage) throws ApiException {
        com.squareup.okhttp.Call call = fetchMemberUsingGETValidateBeforeCall(branch, uuid, acceptLanguage, null, null);
        Type localVarReturnType = new TypeToken<ReferenceSetMember>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * fetchMember (asynchronously)
     * 
     * @param branch branch (required)
     * @param uuid uuid (required)
     * @param acceptLanguage Accept-Language (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call fetchMemberUsingGETAsync(String branch, String uuid, String acceptLanguage, final ApiCallback<ReferenceSetMember> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = fetchMemberUsingGETValidateBeforeCall(branch, uuid, acceptLanguage, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<ReferenceSetMember>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for findBrowserReferenceSetMembersWithAggregationsUsingGET
     * @param branch branch (required)
     * @param acceptLanguage Accept-Language (required)
     * @param referenceSet A reference set identifier or ECL expression can be used to limit the reference sets searched. Example: &lt;723564002 (optional)
     * @param referencedComponentId referencedComponentId (optional)
     * @param active active (optional)
     * @param offset offset (optional, default to 0)
     * @param limit limit (optional, default to 10)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call findBrowserReferenceSetMembersWithAggregationsUsingGETCall(String branch, String acceptLanguage, String referenceSet, String referencedComponentId, Boolean active, Integer offset, Integer limit, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/browser/{branch}/members"
            .replaceAll("\\{" + "branch" + "\\}", apiClient.escapeString(branch.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (referenceSet != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("referenceSet", referenceSet));
        if (referencedComponentId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("referencedComponentId", referencedComponentId));
        if (active != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("active", active));
        if (offset != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("offset", offset));
        if (limit != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("limit", limit));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (acceptLanguage != null)
        localVarHeaderParams.put("Accept-Language", apiClient.parameterToString(acceptLanguage));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call findBrowserReferenceSetMembersWithAggregationsUsingGETValidateBeforeCall(String branch, String acceptLanguage, String referenceSet, String referencedComponentId, Boolean active, Integer offset, Integer limit, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'branch' is set
        if (branch == null) {
            throw new ApiException("Missing the required parameter 'branch' when calling findBrowserReferenceSetMembersWithAggregationsUsingGET(Async)");
        }
        
        // verify the required parameter 'acceptLanguage' is set
        if (acceptLanguage == null) {
            throw new ApiException("Missing the required parameter 'acceptLanguage' when calling findBrowserReferenceSetMembersWithAggregationsUsingGET(Async)");
        }
        

        com.squareup.okhttp.Call call = findBrowserReferenceSetMembersWithAggregationsUsingGETCall(branch, acceptLanguage, referenceSet, referencedComponentId, active, offset, limit, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Search for reference set ids
     * 
     * @param branch branch (required)
     * @param acceptLanguage Accept-Language (required)
     * @param referenceSet A reference set identifier or ECL expression can be used to limit the reference sets searched. Example: &lt;723564002 (optional)
     * @param referencedComponentId referencedComponentId (optional)
     * @param active active (optional)
     * @param offset offset (optional, default to 0)
     * @param limit limit (optional, default to 10)
     * @return RefSetMemberPageWithBucketAggregationsReferenceSetMember
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public RefSetMemberPageWithBucketAggregationsReferenceSetMember findBrowserReferenceSetMembersWithAggregationsUsingGET(String branch, String acceptLanguage, String referenceSet, String referencedComponentId, Boolean active, Integer offset, Integer limit) throws ApiException {
        ApiResponse<RefSetMemberPageWithBucketAggregationsReferenceSetMember> resp = findBrowserReferenceSetMembersWithAggregationsUsingGETWithHttpInfo(branch, acceptLanguage, referenceSet, referencedComponentId, active, offset, limit);
        return resp.getData();
    }

    /**
     * Search for reference set ids
     * 
     * @param branch branch (required)
     * @param acceptLanguage Accept-Language (required)
     * @param referenceSet A reference set identifier or ECL expression can be used to limit the reference sets searched. Example: &lt;723564002 (optional)
     * @param referencedComponentId referencedComponentId (optional)
     * @param active active (optional)
     * @param offset offset (optional, default to 0)
     * @param limit limit (optional, default to 10)
     * @return ApiResponse&lt;RefSetMemberPageWithBucketAggregationsReferenceSetMember&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<RefSetMemberPageWithBucketAggregationsReferenceSetMember> findBrowserReferenceSetMembersWithAggregationsUsingGETWithHttpInfo(String branch, String acceptLanguage, String referenceSet, String referencedComponentId, Boolean active, Integer offset, Integer limit) throws ApiException {
        com.squareup.okhttp.Call call = findBrowserReferenceSetMembersWithAggregationsUsingGETValidateBeforeCall(branch, acceptLanguage, referenceSet, referencedComponentId, active, offset, limit, null, null);
        Type localVarReturnType = new TypeToken<RefSetMemberPageWithBucketAggregationsReferenceSetMember>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Search for reference set ids (asynchronously)
     * 
     * @param branch branch (required)
     * @param acceptLanguage Accept-Language (required)
     * @param referenceSet A reference set identifier or ECL expression can be used to limit the reference sets searched. Example: &lt;723564002 (optional)
     * @param referencedComponentId referencedComponentId (optional)
     * @param active active (optional)
     * @param offset offset (optional, default to 0)
     * @param limit limit (optional, default to 10)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call findBrowserReferenceSetMembersWithAggregationsUsingGETAsync(String branch, String acceptLanguage, String referenceSet, String referencedComponentId, Boolean active, Integer offset, Integer limit, final ApiCallback<RefSetMemberPageWithBucketAggregationsReferenceSetMember> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = findBrowserReferenceSetMembersWithAggregationsUsingGETValidateBeforeCall(branch, acceptLanguage, referenceSet, referencedComponentId, active, offset, limit, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<RefSetMemberPageWithBucketAggregationsReferenceSetMember>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for findRefsetMembersUsingGET
     * @param branch branch (required)
     * @param acceptLanguage Accept-Language (required)
     * @param referenceSet A reference set identifier or ECL expression can be used to limit the reference sets searched. Example: &lt;723564002 (optional)
     * @param referencedComponentId referencedComponentId (optional)
     * @param active active (optional)
     * @param targetComponent targetComponent (optional)
     * @param mapTarget mapTarget (optional)
     * @param owlExpressionConceptId Search by concept identifiers within an owlExpression. (optional)
     * @param owlExpressionGci Return axiom members with a GCI owlExpression. (optional)
     * @param offset offset (optional, default to 0)
     * @param limit limit (optional, default to 50)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call findRefsetMembersUsingGETCall(String branch, String acceptLanguage, String referenceSet, String referencedComponentId, Boolean active, String targetComponent, String mapTarget, String owlExpressionConceptId, Boolean owlExpressionGci, Integer offset, Integer limit, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/{branch}/members"
            .replaceAll("\\{" + "branch" + "\\}", apiClient.escapeString(branch.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (referenceSet != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("referenceSet", referenceSet));
        if (referencedComponentId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("referencedComponentId", referencedComponentId));
        if (active != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("active", active));
        if (targetComponent != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("targetComponent", targetComponent));
        if (mapTarget != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("mapTarget", mapTarget));
        if (owlExpressionConceptId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("owlExpression.conceptId", owlExpressionConceptId));
        if (owlExpressionGci != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("owlExpression.gci", owlExpressionGci));
        if (offset != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("offset", offset));
        if (limit != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("limit", limit));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (acceptLanguage != null)
        localVarHeaderParams.put("Accept-Language", apiClient.parameterToString(acceptLanguage));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call findRefsetMembersUsingGETValidateBeforeCall(String branch, String acceptLanguage, String referenceSet, String referencedComponentId, Boolean active, String targetComponent, String mapTarget, String owlExpressionConceptId, Boolean owlExpressionGci, Integer offset, Integer limit, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'branch' is set
        if (branch == null) {
            throw new ApiException("Missing the required parameter 'branch' when calling findRefsetMembersUsingGET(Async)");
        }
        
        // verify the required parameter 'acceptLanguage' is set
        if (acceptLanguage == null) {
            throw new ApiException("Missing the required parameter 'acceptLanguage' when calling findRefsetMembersUsingGET(Async)");
        }
        

        com.squareup.okhttp.Call call = findRefsetMembersUsingGETCall(branch, acceptLanguage, referenceSet, referencedComponentId, active, targetComponent, mapTarget, owlExpressionConceptId, owlExpressionGci, offset, limit, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Search for reference set members.
     * 
     * @param branch branch (required)
     * @param acceptLanguage Accept-Language (required)
     * @param referenceSet A reference set identifier or ECL expression can be used to limit the reference sets searched. Example: &lt;723564002 (optional)
     * @param referencedComponentId referencedComponentId (optional)
     * @param active active (optional)
     * @param targetComponent targetComponent (optional)
     * @param mapTarget mapTarget (optional)
     * @param owlExpressionConceptId Search by concept identifiers within an owlExpression. (optional)
     * @param owlExpressionGci Return axiom members with a GCI owlExpression. (optional)
     * @param offset offset (optional, default to 0)
     * @param limit limit (optional, default to 50)
     * @return ItemsPageReferenceSetMember
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ItemsPageReferenceSetMember findRefsetMembersUsingGET(String branch, String acceptLanguage, String referenceSet, String referencedComponentId, Boolean active, String targetComponent, String mapTarget, String owlExpressionConceptId, Boolean owlExpressionGci, Integer offset, Integer limit) throws ApiException {
        ApiResponse<ItemsPageReferenceSetMember> resp = findRefsetMembersUsingGETWithHttpInfo(branch, acceptLanguage, referenceSet, referencedComponentId, active, targetComponent, mapTarget, owlExpressionConceptId, owlExpressionGci, offset, limit);
        return resp.getData();
    }

    /**
     * Search for reference set members.
     * 
     * @param branch branch (required)
     * @param acceptLanguage Accept-Language (required)
     * @param referenceSet A reference set identifier or ECL expression can be used to limit the reference sets searched. Example: &lt;723564002 (optional)
     * @param referencedComponentId referencedComponentId (optional)
     * @param active active (optional)
     * @param targetComponent targetComponent (optional)
     * @param mapTarget mapTarget (optional)
     * @param owlExpressionConceptId Search by concept identifiers within an owlExpression. (optional)
     * @param owlExpressionGci Return axiom members with a GCI owlExpression. (optional)
     * @param offset offset (optional, default to 0)
     * @param limit limit (optional, default to 50)
     * @return ApiResponse&lt;ItemsPageReferenceSetMember&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ItemsPageReferenceSetMember> findRefsetMembersUsingGETWithHttpInfo(String branch, String acceptLanguage, String referenceSet, String referencedComponentId, Boolean active, String targetComponent, String mapTarget, String owlExpressionConceptId, Boolean owlExpressionGci, Integer offset, Integer limit) throws ApiException {
        com.squareup.okhttp.Call call = findRefsetMembersUsingGETValidateBeforeCall(branch, acceptLanguage, referenceSet, referencedComponentId, active, targetComponent, mapTarget, owlExpressionConceptId, owlExpressionGci, offset, limit, null, null);
        Type localVarReturnType = new TypeToken<ItemsPageReferenceSetMember>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Search for reference set members. (asynchronously)
     * 
     * @param branch branch (required)
     * @param acceptLanguage Accept-Language (required)
     * @param referenceSet A reference set identifier or ECL expression can be used to limit the reference sets searched. Example: &lt;723564002 (optional)
     * @param referencedComponentId referencedComponentId (optional)
     * @param active active (optional)
     * @param targetComponent targetComponent (optional)
     * @param mapTarget mapTarget (optional)
     * @param owlExpressionConceptId Search by concept identifiers within an owlExpression. (optional)
     * @param owlExpressionGci Return axiom members with a GCI owlExpression. (optional)
     * @param offset offset (optional, default to 0)
     * @param limit limit (optional, default to 50)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call findRefsetMembersUsingGETAsync(String branch, String acceptLanguage, String referenceSet, String referencedComponentId, Boolean active, String targetComponent, String mapTarget, String owlExpressionConceptId, Boolean owlExpressionGci, Integer offset, Integer limit, final ApiCallback<ItemsPageReferenceSetMember> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = findRefsetMembersUsingGETValidateBeforeCall(branch, acceptLanguage, referenceSet, referencedComponentId, active, targetComponent, mapTarget, owlExpressionConceptId, owlExpressionGci, offset, limit, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<ItemsPageReferenceSetMember>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
