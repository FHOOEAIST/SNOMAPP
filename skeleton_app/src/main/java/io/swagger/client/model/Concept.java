/*
 * Snowstorm
 * SNOMED CT Terminology Server REST API
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Axiom;
import io.swagger.client.model.Description;
import io.swagger.client.model.ReferenceSetMember;
import io.swagger.client.model.Relationship;
import io.swagger.client.model.TermLangPojo;
import java.io.IOException;
import java.util.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * Concept
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-02T10:22:15.067Z")
public class Concept {
  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("allOwlAxiomMembers")
  private List<ReferenceSetMember> allOwlAxiomMembers = null;

  @SerializedName("associationTargets")
  private Map<String, Set> associationTargets = null;

  @SerializedName("classAxioms")
  private List<Axiom> classAxioms = null;

  @SerializedName("conceptId")
  private String conceptId = null;

  @SerializedName("definitionStatus")
  private String definitionStatus = null;

  @SerializedName("definitionStatusId")
  private String definitionStatusId = null;

  @SerializedName("descriptions")
  private List<Description> descriptions = null;

  @SerializedName("effectiveTime")
  private String effectiveTime = null;

  @SerializedName("effectiveTimeI")
  private Integer effectiveTimeI = null;

  @SerializedName("end")
  private OffsetDateTime end = null;

  @SerializedName("fsn")
  private TermLangPojo fsn = null;

  @SerializedName("gciAxioms")
  private List<Axiom> gciAxioms = null;

  @SerializedName("inactivationIndicator")
  private String inactivationIndicator = null;

  @SerializedName("internalId")
  private String internalId = null;

  @SerializedName("moduleId")
  private String moduleId = null;

  @SerializedName("path")
  private String path = null;

  @SerializedName("primitive")
  private Boolean primitive = null;

  @SerializedName("pt")
  private TermLangPojo pt = null;

  @SerializedName("relationships")
  private List<Relationship> relationships = null;

  @SerializedName("releaseHash")
  private String releaseHash = null;

  @SerializedName("released")
  private Boolean released = null;

  @SerializedName("releasedEffectiveTime")
  private Integer releasedEffectiveTime = null;

  @SerializedName("start")
  private OffsetDateTime start = null;

  public Concept active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public Concept allOwlAxiomMembers(List<ReferenceSetMember> allOwlAxiomMembers) {
    this.allOwlAxiomMembers = allOwlAxiomMembers;
    return this;
  }

  public Concept addAllOwlAxiomMembersItem(ReferenceSetMember allOwlAxiomMembersItem) {
    if (this.allOwlAxiomMembers == null) {
      this.allOwlAxiomMembers = new ArrayList<ReferenceSetMember>();
    }
    this.allOwlAxiomMembers.add(allOwlAxiomMembersItem);
    return this;
  }

   /**
   * Get allOwlAxiomMembers
   * @return allOwlAxiomMembers
  **/
  @ApiModelProperty(value = "")
  public List<ReferenceSetMember> getAllOwlAxiomMembers() {
    return allOwlAxiomMembers;
  }

  public void setAllOwlAxiomMembers(List<ReferenceSetMember> allOwlAxiomMembers) {
    this.allOwlAxiomMembers = allOwlAxiomMembers;
  }

  public Concept associationTargets(Map<String, Set> associationTargets) {
    this.associationTargets = associationTargets;
    return this;
  }

  public Concept putAssociationTargetsItem(String key, Set associationTargetsItem) {
    if (this.associationTargets == null) {
      this.associationTargets = new HashMap<String, Set>();
    }
    this.associationTargets.put(key, associationTargetsItem);
    return this;
  }

   /**
   * Get associationTargets
   * @return associationTargets
  **/
  @ApiModelProperty(value = "")
  public Map<String, Set> getAssociationTargets() {
    return associationTargets;
  }

  public void setAssociationTargets(Map<String, Set> associationTargets) {
    this.associationTargets = associationTargets;
  }

  public Concept classAxioms(List<Axiom> classAxioms) {
    this.classAxioms = classAxioms;
    return this;
  }

  public Concept addClassAxiomsItem(Axiom classAxiomsItem) {
    if (this.classAxioms == null) {
      this.classAxioms = new ArrayList<Axiom>();
    }
    this.classAxioms.add(classAxiomsItem);
    return this;
  }

   /**
   * Get classAxioms
   * @return classAxioms
  **/
  @ApiModelProperty(value = "")
  public List<Axiom> getClassAxioms() {
    return classAxioms;
  }

  public void setClassAxioms(List<Axiom> classAxioms) {
    this.classAxioms = classAxioms;
  }

  public Concept conceptId(String conceptId) {
    this.conceptId = conceptId;
    return this;
  }

   /**
   * Get conceptId
   * @return conceptId
  **/
  @ApiModelProperty(value = "")
  public String getConceptId() {
    return conceptId;
  }

  public void setConceptId(String conceptId) {
    this.conceptId = conceptId;
  }

  public Concept definitionStatus(String definitionStatus) {
    this.definitionStatus = definitionStatus;
    return this;
  }

   /**
   * Get definitionStatus
   * @return definitionStatus
  **/
  @ApiModelProperty(value = "")
  public String getDefinitionStatus() {
    return definitionStatus;
  }

  public void setDefinitionStatus(String definitionStatus) {
    this.definitionStatus = definitionStatus;
  }

  public Concept definitionStatusId(String definitionStatusId) {
    this.definitionStatusId = definitionStatusId;
    return this;
  }

   /**
   * Get definitionStatusId
   * @return definitionStatusId
  **/
  @ApiModelProperty(value = "")
  public String getDefinitionStatusId() {
    return definitionStatusId;
  }

  public void setDefinitionStatusId(String definitionStatusId) {
    this.definitionStatusId = definitionStatusId;
  }

  public Concept descriptions(List<Description> descriptions) {
    this.descriptions = descriptions;
    return this;
  }

  public Concept addDescriptionsItem(Description descriptionsItem) {
    if (this.descriptions == null) {
      this.descriptions = new ArrayList<Description>();
    }
    this.descriptions.add(descriptionsItem);
    return this;
  }

   /**
   * Get descriptions
   * @return descriptions
  **/
  @ApiModelProperty(value = "")
  public List<Description> getDescriptions() {
    return descriptions;
  }

  public void setDescriptions(List<Description> descriptions) {
    this.descriptions = descriptions;
  }

  public Concept effectiveTime(String effectiveTime) {
    this.effectiveTime = effectiveTime;
    return this;
  }

   /**
   * Get effectiveTime
   * @return effectiveTime
  **/
  @ApiModelProperty(value = "")
  public String getEffectiveTime() {
    return effectiveTime;
  }

  public void setEffectiveTime(String effectiveTime) {
    this.effectiveTime = effectiveTime;
  }

  public Concept effectiveTimeI(Integer effectiveTimeI) {
    this.effectiveTimeI = effectiveTimeI;
    return this;
  }

   /**
   * Get effectiveTimeI
   * @return effectiveTimeI
  **/
  @ApiModelProperty(value = "")
  public Integer getEffectiveTimeI() {
    return effectiveTimeI;
  }

  public void setEffectiveTimeI(Integer effectiveTimeI) {
    this.effectiveTimeI = effectiveTimeI;
  }

  public Concept end(OffsetDateTime end) {
    this.end = end;
    return this;
  }

   /**
   * Get end
   * @return end
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getEnd() {
    return end;
  }

  public void setEnd(OffsetDateTime end) {
    this.end = end;
  }

  public Concept fsn(TermLangPojo fsn) {
    this.fsn = fsn;
    return this;
  }

   /**
   * Get fsn
   * @return fsn
  **/
  @ApiModelProperty(value = "")
  public TermLangPojo getFsn() {
    return fsn;
  }

  public void setFsn(TermLangPojo fsn) {
    this.fsn = fsn;
  }

  public Concept gciAxioms(List<Axiom> gciAxioms) {
    this.gciAxioms = gciAxioms;
    return this;
  }

  public Concept addGciAxiomsItem(Axiom gciAxiomsItem) {
    if (this.gciAxioms == null) {
      this.gciAxioms = new ArrayList<Axiom>();
    }
    this.gciAxioms.add(gciAxiomsItem);
    return this;
  }

   /**
   * Get gciAxioms
   * @return gciAxioms
  **/
  @ApiModelProperty(value = "")
  public List<Axiom> getGciAxioms() {
    return gciAxioms;
  }

  public void setGciAxioms(List<Axiom> gciAxioms) {
    this.gciAxioms = gciAxioms;
  }

  public Concept inactivationIndicator(String inactivationIndicator) {
    this.inactivationIndicator = inactivationIndicator;
    return this;
  }

   /**
   * Get inactivationIndicator
   * @return inactivationIndicator
  **/
  @ApiModelProperty(value = "")
  public String getInactivationIndicator() {
    return inactivationIndicator;
  }

  public void setInactivationIndicator(String inactivationIndicator) {
    this.inactivationIndicator = inactivationIndicator;
  }

  public Concept internalId(String internalId) {
    this.internalId = internalId;
    return this;
  }

   /**
   * Get internalId
   * @return internalId
  **/
  @ApiModelProperty(value = "")
  public String getInternalId() {
    return internalId;
  }

  public void setInternalId(String internalId) {
    this.internalId = internalId;
  }

  public Concept moduleId(String moduleId) {
    this.moduleId = moduleId;
    return this;
  }

   /**
   * Get moduleId
   * @return moduleId
  **/
  @ApiModelProperty(value = "")
  public String getModuleId() {
    return moduleId;
  }

  public void setModuleId(String moduleId) {
    this.moduleId = moduleId;
  }

  public Concept path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @ApiModelProperty(value = "")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public Concept primitive(Boolean primitive) {
    this.primitive = primitive;
    return this;
  }

   /**
   * Get primitive
   * @return primitive
  **/
  @ApiModelProperty(value = "")
  public Boolean isPrimitive() {
    return primitive;
  }

  public void setPrimitive(Boolean primitive) {
    this.primitive = primitive;
  }

  public Concept pt(TermLangPojo pt) {
    this.pt = pt;
    return this;
  }

   /**
   * Get pt
   * @return pt
  **/
  @ApiModelProperty(value = "")
  public TermLangPojo getPt() {
    return pt;
  }

  public void setPt(TermLangPojo pt) {
    this.pt = pt;
  }

  public Concept relationships(List<Relationship> relationships) {
    this.relationships = relationships;
    return this;
  }

  public Concept addRelationshipsItem(Relationship relationshipsItem) {
    if (this.relationships == null) {
      this.relationships = new ArrayList<Relationship>();
    }
    this.relationships.add(relationshipsItem);
    return this;
  }

   /**
   * Get relationships
   * @return relationships
  **/
  @ApiModelProperty(value = "")
  public List<Relationship> getRelationships() {
    return relationships;
  }

  public void setRelationships(List<Relationship> relationships) {
    this.relationships = relationships;
  }

  public Concept releaseHash(String releaseHash) {
    this.releaseHash = releaseHash;
    return this;
  }

   /**
   * Get releaseHash
   * @return releaseHash
  **/
  @ApiModelProperty(value = "")
  public String getReleaseHash() {
    return releaseHash;
  }

  public void setReleaseHash(String releaseHash) {
    this.releaseHash = releaseHash;
  }

  public Concept released(Boolean released) {
    this.released = released;
    return this;
  }

   /**
   * Get released
   * @return released
  **/
  @ApiModelProperty(value = "")
  public Boolean isReleased() {
    return released;
  }

  public void setReleased(Boolean released) {
    this.released = released;
  }

  public Concept releasedEffectiveTime(Integer releasedEffectiveTime) {
    this.releasedEffectiveTime = releasedEffectiveTime;
    return this;
  }

   /**
   * Get releasedEffectiveTime
   * @return releasedEffectiveTime
  **/
  @ApiModelProperty(value = "")
  public Integer getReleasedEffectiveTime() {
    return releasedEffectiveTime;
  }

  public void setReleasedEffectiveTime(Integer releasedEffectiveTime) {
    this.releasedEffectiveTime = releasedEffectiveTime;
  }

  public Concept start(OffsetDateTime start) {
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getStart() {
    return start;
  }

  public void setStart(OffsetDateTime start) {
    this.start = start;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Concept concept = (Concept) o;
    return Objects.equals(this.active, concept.active) &&
        Objects.equals(this.allOwlAxiomMembers, concept.allOwlAxiomMembers) &&
        Objects.equals(this.associationTargets, concept.associationTargets) &&
        Objects.equals(this.classAxioms, concept.classAxioms) &&
        Objects.equals(this.conceptId, concept.conceptId) &&
        Objects.equals(this.definitionStatus, concept.definitionStatus) &&
        Objects.equals(this.definitionStatusId, concept.definitionStatusId) &&
        Objects.equals(this.descriptions, concept.descriptions) &&
        Objects.equals(this.effectiveTime, concept.effectiveTime) &&
        Objects.equals(this.effectiveTimeI, concept.effectiveTimeI) &&
        Objects.equals(this.end, concept.end) &&
        Objects.equals(this.fsn, concept.fsn) &&
        Objects.equals(this.gciAxioms, concept.gciAxioms) &&
        Objects.equals(this.inactivationIndicator, concept.inactivationIndicator) &&
        Objects.equals(this.internalId, concept.internalId) &&
        Objects.equals(this.moduleId, concept.moduleId) &&
        Objects.equals(this.path, concept.path) &&
        Objects.equals(this.primitive, concept.primitive) &&
        Objects.equals(this.pt, concept.pt) &&
        Objects.equals(this.relationships, concept.relationships) &&
        Objects.equals(this.releaseHash, concept.releaseHash) &&
        Objects.equals(this.released, concept.released) &&
        Objects.equals(this.releasedEffectiveTime, concept.releasedEffectiveTime) &&
        Objects.equals(this.start, concept.start);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, allOwlAxiomMembers, associationTargets, classAxioms, conceptId, definitionStatus, definitionStatusId, descriptions, effectiveTime, effectiveTimeI, end, fsn, gciAxioms, inactivationIndicator, internalId, moduleId, path, primitive, pt, relationships, releaseHash, released, releasedEffectiveTime, start);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Concept {\n");
    
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    allOwlAxiomMembers: ").append(toIndentedString(allOwlAxiomMembers)).append("\n");
    sb.append("    associationTargets: ").append(toIndentedString(associationTargets)).append("\n");
    sb.append("    classAxioms: ").append(toIndentedString(classAxioms)).append("\n");
    sb.append("    conceptId: ").append(toIndentedString(conceptId)).append("\n");
    sb.append("    definitionStatus: ").append(toIndentedString(definitionStatus)).append("\n");
    sb.append("    definitionStatusId: ").append(toIndentedString(definitionStatusId)).append("\n");
    sb.append("    descriptions: ").append(toIndentedString(descriptions)).append("\n");
    sb.append("    effectiveTime: ").append(toIndentedString(effectiveTime)).append("\n");
    sb.append("    effectiveTimeI: ").append(toIndentedString(effectiveTimeI)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    fsn: ").append(toIndentedString(fsn)).append("\n");
    sb.append("    gciAxioms: ").append(toIndentedString(gciAxioms)).append("\n");
    sb.append("    inactivationIndicator: ").append(toIndentedString(inactivationIndicator)).append("\n");
    sb.append("    internalId: ").append(toIndentedString(internalId)).append("\n");
    sb.append("    moduleId: ").append(toIndentedString(moduleId)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    primitive: ").append(toIndentedString(primitive)).append("\n");
    sb.append("    pt: ").append(toIndentedString(pt)).append("\n");
    sb.append("    relationships: ").append(toIndentedString(relationships)).append("\n");
    sb.append("    releaseHash: ").append(toIndentedString(releaseHash)).append("\n");
    sb.append("    released: ").append(toIndentedString(released)).append("\n");
    sb.append("    releasedEffectiveTime: ").append(toIndentedString(releasedEffectiveTime)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

