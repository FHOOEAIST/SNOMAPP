/*
 * Snowstorm
 * SNOMED CT Terminology Server REST API
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.ItemsPageConceptMini;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class MrcmXmlApi {
    private ApiClient apiClient;

    public MrcmXmlApi() {
        this(Configuration.getDefaultApiClient());
    }

    public MrcmXmlApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for retrieveAttributeValuesUsingGET
     * @param path path (required)
     * @param attributeId attributeId (required)
     * @param termPrefix termPrefix (required)
     * @param acceptLanguage Accept-Language (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call retrieveAttributeValuesUsingGETCall(String path, String attributeId, String termPrefix, String acceptLanguage, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/mrcm/{path}/attribute-values/{attributeId}"
            .replaceAll("\\{" + "path" + "\\}", apiClient.escapeString(path.toString()))
            .replaceAll("\\{" + "attributeId" + "\\}", apiClient.escapeString(attributeId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (termPrefix != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("termPrefix", termPrefix));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (acceptLanguage != null)
        localVarHeaderParams.put("Accept-Language", apiClient.parameterToString(acceptLanguage));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call retrieveAttributeValuesUsingGETValidateBeforeCall(String path, String attributeId, String termPrefix, String acceptLanguage, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'path' is set
        if (path == null) {
            throw new ApiException("Missing the required parameter 'path' when calling retrieveAttributeValuesUsingGET(Async)");
        }
        
        // verify the required parameter 'attributeId' is set
        if (attributeId == null) {
            throw new ApiException("Missing the required parameter 'attributeId' when calling retrieveAttributeValuesUsingGET(Async)");
        }
        
        // verify the required parameter 'termPrefix' is set
        if (termPrefix == null) {
            throw new ApiException("Missing the required parameter 'termPrefix' when calling retrieveAttributeValuesUsingGET(Async)");
        }
        
        // verify the required parameter 'acceptLanguage' is set
        if (acceptLanguage == null) {
            throw new ApiException("Missing the required parameter 'acceptLanguage' when calling retrieveAttributeValuesUsingGET(Async)");
        }
        

        com.squareup.okhttp.Call call = retrieveAttributeValuesUsingGETCall(path, attributeId, termPrefix, acceptLanguage, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Retrieve valid values for the given attribute and term prefix.
     * 
     * @param path path (required)
     * @param attributeId attributeId (required)
     * @param termPrefix termPrefix (required)
     * @param acceptLanguage Accept-Language (required)
     * @return ItemsPageConceptMini
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ItemsPageConceptMini retrieveAttributeValuesUsingGET(String path, String attributeId, String termPrefix, String acceptLanguage) throws ApiException {
        ApiResponse<ItemsPageConceptMini> resp = retrieveAttributeValuesUsingGETWithHttpInfo(path, attributeId, termPrefix, acceptLanguage);
        return resp.getData();
    }

    /**
     * Retrieve valid values for the given attribute and term prefix.
     * 
     * @param path path (required)
     * @param attributeId attributeId (required)
     * @param termPrefix termPrefix (required)
     * @param acceptLanguage Accept-Language (required)
     * @return ApiResponse&lt;ItemsPageConceptMini&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ItemsPageConceptMini> retrieveAttributeValuesUsingGETWithHttpInfo(String path, String attributeId, String termPrefix, String acceptLanguage) throws ApiException {
        com.squareup.okhttp.Call call = retrieveAttributeValuesUsingGETValidateBeforeCall(path, attributeId, termPrefix, acceptLanguage, null, null);
        Type localVarReturnType = new TypeToken<ItemsPageConceptMini>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Retrieve valid values for the given attribute and term prefix. (asynchronously)
     * 
     * @param path path (required)
     * @param attributeId attributeId (required)
     * @param termPrefix termPrefix (required)
     * @param acceptLanguage Accept-Language (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call retrieveAttributeValuesUsingGETAsync(String path, String attributeId, String termPrefix, String acceptLanguage, final ApiCallback<ItemsPageConceptMini> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = retrieveAttributeValuesUsingGETValidateBeforeCall(path, attributeId, termPrefix, acceptLanguage, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<ItemsPageConceptMini>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for retrieveDomainAttributesUsingGET
     * @param path path (required)
     * @param acceptLanguage Accept-Language (required)
     * @param parentIds parentIds (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call retrieveDomainAttributesUsingGETCall(String path, String acceptLanguage, List<Long> parentIds, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/mrcm/{path}/domain-attributes"
            .replaceAll("\\{" + "path" + "\\}", apiClient.escapeString(path.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (parentIds != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "parentIds", parentIds));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (acceptLanguage != null)
        localVarHeaderParams.put("Accept-Language", apiClient.parameterToString(acceptLanguage));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call retrieveDomainAttributesUsingGETValidateBeforeCall(String path, String acceptLanguage, List<Long> parentIds, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'path' is set
        if (path == null) {
            throw new ApiException("Missing the required parameter 'path' when calling retrieveDomainAttributesUsingGET(Async)");
        }
        
        // verify the required parameter 'acceptLanguage' is set
        if (acceptLanguage == null) {
            throw new ApiException("Missing the required parameter 'acceptLanguage' when calling retrieveDomainAttributesUsingGET(Async)");
        }
        

        com.squareup.okhttp.Call call = retrieveDomainAttributesUsingGETCall(path, acceptLanguage, parentIds, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Retrieve MRCM domain attributes applicable for the given parents.
     * 
     * @param path path (required)
     * @param acceptLanguage Accept-Language (required)
     * @param parentIds parentIds (optional)
     * @return ItemsPageConceptMini
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ItemsPageConceptMini retrieveDomainAttributesUsingGET(String path, String acceptLanguage, List<Long> parentIds) throws ApiException {
        ApiResponse<ItemsPageConceptMini> resp = retrieveDomainAttributesUsingGETWithHttpInfo(path, acceptLanguage, parentIds);
        return resp.getData();
    }

    /**
     * Retrieve MRCM domain attributes applicable for the given parents.
     * 
     * @param path path (required)
     * @param acceptLanguage Accept-Language (required)
     * @param parentIds parentIds (optional)
     * @return ApiResponse&lt;ItemsPageConceptMini&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ItemsPageConceptMini> retrieveDomainAttributesUsingGETWithHttpInfo(String path, String acceptLanguage, List<Long> parentIds) throws ApiException {
        com.squareup.okhttp.Call call = retrieveDomainAttributesUsingGETValidateBeforeCall(path, acceptLanguage, parentIds, null, null);
        Type localVarReturnType = new TypeToken<ItemsPageConceptMini>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Retrieve MRCM domain attributes applicable for the given parents. (asynchronously)
     * 
     * @param path path (required)
     * @param acceptLanguage Accept-Language (required)
     * @param parentIds parentIds (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call retrieveDomainAttributesUsingGETAsync(String path, String acceptLanguage, List<Long> parentIds, final ApiCallback<ItemsPageConceptMini> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = retrieveDomainAttributesUsingGETValidateBeforeCall(path, acceptLanguage, parentIds, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<ItemsPageConceptMini>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
